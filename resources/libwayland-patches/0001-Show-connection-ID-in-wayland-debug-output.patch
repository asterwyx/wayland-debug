From d68edcbb5eb106620729f62a4ffa0d8cfbc27661 Mon Sep 17 00:00:00 2001
From: Sophie Winter <git@phie.me>
Date: Mon, 3 Apr 2023 14:38:01 -0700
Subject: [PATCH] Show connection ID in wayland-debug output

---
 src/connection.c      | 10 ++++++++--
 src/wayland-client.c  |  8 ++++----
 src/wayland-private.h |  2 +-
 src/wayland-server.c  |  2 +-
 4 files changed, 14 insertions(+), 8 deletions(-)

diff --git a/src/connection.c b/src/connection.c
index ceaeac1..5358a70 100644
--- a/src/connection.c
+++ b/src/connection.c
@@ -44,6 +44,8 @@
 #include "wayland-private.h"
 #include "wayland-os.h"
 
+int monotonic_connection_count = 0;
+
 static inline uint32_t
 div_roundup(uint32_t n, size_t a)
 {
@@ -69,6 +71,7 @@ struct wl_connection {
 	struct wl_ring_buffer fds_in, fds_out;
 	int fd;
 	int want_flush;
+	int conn_id;
 };
 
 static int
@@ -176,6 +179,8 @@ wl_connection_create(int fd)
 		return NULL;
 
 	connection->fd = fd;
+	connection->conn_id = monotonic_connection_count << 8 | fd;
+	monotonic_connection_count += 1;
 
 	return connection;
 }
@@ -1263,7 +1268,7 @@ wl_closure_queue(struct wl_closure *closure, struct wl_connection *connection)
 }
 
 void
-wl_closure_print(struct wl_closure *closure, struct wl_object *target,
+wl_closure_print(struct wl_connection *connection, struct wl_closure *closure, struct wl_object *target,
 		 int send, int discarded, uint32_t (*n_parse)(union wl_argument *arg))
 {
 	int i;
@@ -1283,8 +1288,9 @@ wl_closure_print(struct wl_closure *closure, struct wl_object *target,
 	clock_gettime(CLOCK_REALTIME, &tp);
 	time = (tp.tv_sec * 1000000L) + (tp.tv_nsec / 1000);
 
-	fprintf(f, "[%7u.%03u] %s%s%s@%u.%s(",
+	fprintf(f, "[%7u.%03u] <%d> %s%s%s@%u.%s(",
 		time / 1000, time % 1000,
+		connection->conn_id,
 		discarded ? "discarded " : "",
 		send ? " -> " : "",
 		target->interface->name, target->id,
diff --git a/src/wayland-client.c b/src/wayland-client.c
index 105f9be..d0a9d5b 100644
--- a/src/wayland-client.c
+++ b/src/wayland-client.c
@@ -886,7 +886,7 @@ wl_proxy_marshal_array_flags(struct wl_proxy *proxy, uint32_t opcode,
 	}
 
 	if (debug_client)
-		wl_closure_print(closure, &proxy->object, true, false, NULL);
+		wl_closure_print(proxy->display->connection, closure, &proxy->object, true, false, NULL);
 
 	if (wl_closure_send(closure, proxy->display->connection)) {
 		wl_log("Error sending request: %s\n", strerror(errno));
@@ -1611,7 +1611,7 @@ dispatch_event(struct wl_display *display, struct wl_event_queue *queue)
 	proxy_destroyed = !!(proxy->flags & WL_PROXY_FLAG_DESTROYED);
 	if (proxy_destroyed) {
 		if (debug_client)
-			wl_closure_print(closure, &proxy->object, false, true, id_from_object);
+			wl_closure_print(display->connection, closure, &proxy->object, false, true, id_from_object);
 		destroy_queued_closure(closure);
 		return;
 	}
@@ -1620,13 +1620,13 @@ dispatch_event(struct wl_display *display, struct wl_event_queue *queue)
 
 	if (proxy->dispatcher) {
 		if (debug_client)
-			wl_closure_print(closure, &proxy->object, false, false, id_from_object);
+			wl_closure_print(display->connection, closure, &proxy->object, false, false, id_from_object);
 
 		wl_closure_dispatch(closure, proxy->dispatcher,
 				    &proxy->object, opcode);
 	} else if (proxy->object.implementation) {
 		if (debug_client)
-			wl_closure_print(closure, &proxy->object, false, false, id_from_object);
+			wl_closure_print(display->connection, closure, &proxy->object, false, false, id_from_object);
 
 		wl_closure_invoke(closure, WL_CLOSURE_INVOKE_CLIENT,
 				  &proxy->object, opcode, proxy->user_data);
diff --git a/src/wayland-private.h b/src/wayland-private.h
index 9274f1b..6764e08 100644
--- a/src/wayland-private.h
+++ b/src/wayland-private.h
@@ -211,7 +211,7 @@ int
 wl_closure_queue(struct wl_closure *closure, struct wl_connection *connection);
 
 void
-wl_closure_print(struct wl_closure *closure,
+wl_closure_print(struct wl_connection *connection, struct wl_closure *closure,
 		 struct wl_object *target, int send, int discarded,
 		 uint32_t (*n_parse)(union wl_argument *arg));
 
diff --git a/src/wayland-server.c b/src/wayland-server.c
index d51acc6..992fd3c 100644
--- a/src/wayland-server.c
+++ b/src/wayland-server.c
@@ -157,7 +157,7 @@ log_closure(struct wl_resource *resource,
 	struct wl_protocol_logger_message message;
 
 	if (debug_server)
-		wl_closure_print(closure, object, send, false, NULL);
+		wl_closure_print(resource->client->connection, closure, object, send, false, NULL);
 
 	if (!wl_list_empty(&display->protocol_loggers)) {
 		message.resource = resource;
-- 
2.34.1

